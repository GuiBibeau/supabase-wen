import type { GetServerSidePropsContext, NextPage } from "next";
import Head from "next/head";
import { VideoCard } from "../components/VideoCard";
import styles from "../styles/Home.module.css";
import { getSession, useWen } from "wen-connect";
import { w3fsProvider } from "../lib/w3fs";
import { useState, useEffect } from "react";
import { BigNumber, utils } from "ethers";
import { LoadDoats } from "../components/LoadDots";
import { useRouter } from "next/router";
import { supabase } from "../lib/supabase";

const Home: NextPage = ({ session }: any) => {
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const { wallet, connect } = useWen(session);

  const handleConnect = () => {
    connect({ chainId: "0x4" });
  };

  useEffect(() => {
    if (window.location.href.includes("refresh_token")) {
      window.open("https://discord.gg/bfhNapbvbA");
    }
  }, []);

  const handleMint = async () => {
    try {
      router.prefetch("/join");
      setLoading(true);
      const { mint } = w3fsProvider();
      console.log("here");
      const tokenPrice = utils.parseEther("0.02");
      const tx = await mint(BigNumber.from(1), { value: tokenPrice });
      await tx.wait(1);
    } catch (e) {
      console.error(e);
    } finally {
      setTimeout(() => {
        setLoading(false);
        router.push("/join");
      }, 1000);
    }
  };

  const buttonText = wallet.connected ? "Mint" : "Connect to mint ";

  const handdleButtonClick = wallet.connected ? handleMint : handleConnect;

  return (
    <div className={styles.container}>
      <Head>
        <title>Web3 FullStack</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="relative bg-black">
          <div className="h-56 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2">
            <VideoCard className="w-full h-full object-cover rounded-3xl" />
          </div>
          <div className="relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
            <div className="md:ml-auto md:w-1/2 md:pl-10">
              <h2 className="text-base font-semibold uppercase tracking-wider text-gray-300">
                Exclusive access
              </h2>
              <p className="mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl">
                Web3 Fullstack member card
              </p>
              <p className="mt-3 text-lg text-gray-300">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et,
                egestas tempus tellus etiam sed. Quam a scelerisque amet
                ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat
                quisque ut interdum tincidunt duis.
              </p>
              <div className="mt-8">
                <div className="inline-flex rounded-md shadow cursor-pointer">
                  <a
                    onClick={handdleButtonClick}
                    className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                  >
                    {loading ? <LoadDoats /> : buttonText}
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  return {
    props: {
      session: getSession(context),
    },
  };
};
